<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:SugzTools.Controls">

    <!--Merged Dictionaries-->
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="/SugzTools;component/Themes/MaxStyles.xaml" />
    </ResourceDictionary.MergedDictionaries>


    <!--LeftLabelTemplate-->
    <ControlTemplate x:Key="LeftLabelTemplate" TargetType="{x:Type local:SgzRadioButton}">
        <StackPanel Orientation="Horizontal">
            <TextBlock Text="{TemplateBinding Content}"
                       Foreground="{TemplateBinding Foreground}"
                       Width="{TemplateBinding Width, ConverterParameter=15, Converter={StaticResource LabelWidth}}"
                       Margin="0,0,2,0" />
            <Border x:Name="PART_Mouse"
                    Background="{TemplateBinding Background}"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="1"
                    CornerRadius="6"
                    Grid.Column="1"
                    Width="13"
                    Height="13">
                <Ellipse Margin="2"
                         Fill="{Binding CheckedBrush, RelativeSource={RelativeSource TemplatedParent}}"
                         Visibility="{TemplateBinding IsChecked, Converter={StaticResource BoolToVisibility}}" />
            </Border>
        </StackPanel>

        <!--Triggers-->
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" 
                     Value="True">
                <Setter TargetName="PART_Mouse"
                        Property="Background"
                        Value="{Binding MouseOverBrush, RelativeSource={RelativeSource TemplatedParent}}" />
            </Trigger>
        </ControlTemplate.Triggers>

    </ControlTemplate>


    <!--RightLabeTemplate-->
    <ControlTemplate x:Key="RightLabeTemplate" TargetType="{x:Type local:SgzRadioButton}">
        <StackPanel Orientation="Horizontal">
            <Border x:Name="PART_Mouse"
                    Background="{TemplateBinding Background}"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="1"
                    CornerRadius="6"
                    Grid.Column="1"
                    Width="13"
                    Height="13">
                <Ellipse Margin="2"
                         Fill="{Binding CheckedBrush, RelativeSource={RelativeSource TemplatedParent}}"
                         Visibility="{TemplateBinding IsChecked, Converter={StaticResource BoolToVisibility}}" />
            </Border>
            <TextBlock Text="{TemplateBinding Content}"
                       Foreground="{TemplateBinding Foreground}"
                       Width="{TemplateBinding Width, ConverterParameter=15, Converter={StaticResource LabelWidth}}"
                       Margin="0,0,2,0" />
        </StackPanel>

        <!--Triggers-->
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver"
                     Value="True">
                <Setter TargetName="PART_Mouse"
                        Property="Background"
                        Value="{Binding MouseOverBrush, RelativeSource={RelativeSource TemplatedParent}}" />
            </Trigger>
        </ControlTemplate.Triggers>
        
    </ControlTemplate>


    <!--CheckButtonTemplate-->
    <ControlTemplate x:Key="CheckButtonTemplate" TargetType="{x:Type local:SgzRadioButton}">
        <Border x:Name="PART_Mouse"
                Background="{TemplateBinding Background}"
                BorderThickness="{Binding BaseBorderThickness, RelativeSource={RelativeSource TemplatedParent}}"
                BorderBrush="{TemplateBinding BorderBrush}"
                CornerRadius="{Binding CornerRadius, RelativeSource={RelativeSource TemplatedParent}}">
            <ContentPresenter VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" />
        </Border>

        <ControlTemplate.Triggers>

            <!--IsMouseOver & IsChecked-->
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver" Value="True" />
                    <Condition Property="IsChecked" Value="True" />
                </MultiTrigger.Conditions>
                <Setter TargetName="PART_Mouse" Property="Background" Value="{Binding MouseDownBrush, RelativeSource={RelativeSource TemplatedParent}}" />
                <Setter TargetName="PART_Mouse" Property="BorderThickness" Value="{Binding BorderThickness, RelativeSource={RelativeSource TemplatedParent}}" />
            </MultiTrigger>

            <!--not IsMouseOver & IsChecked-->
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver" Value="False" />
                    <Condition Property="IsChecked" Value="True" />
                </MultiTrigger.Conditions>
                <Setter TargetName="PART_Mouse" Property="Background" Value="{Binding CheckedBrush, RelativeSource={RelativeSource TemplatedParent}}" />
                <Setter TargetName="PART_Mouse" Property="BorderThickness" Value="{Binding BorderThickness, RelativeSource={RelativeSource TemplatedParent}}" />
            </MultiTrigger>

            <!--IsMouseOver & not IsChecked-->
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver" Value="True" />
                    <Condition Property="IsChecked" Value="False" />
                </MultiTrigger.Conditions>
                <Setter TargetName="PART_Mouse" Property="Background" Value="{Binding MouseOverBrush, RelativeSource={RelativeSource TemplatedParent}}" />
                <Setter TargetName="PART_Mouse" Property="BorderThickness" Value="{Binding BorderThickness, RelativeSource={RelativeSource TemplatedParent}}" />
            </MultiTrigger>

            <!--IsPressed & not IsChecked-->
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsPressed" Value="True" />
                    <Condition Property="IsChecked" Value="false" />
                </MultiTrigger.Conditions>
                <Setter TargetName="PART_Mouse" Property="Background" Value="{Binding MouseDownBrush, RelativeSource={RelativeSource TemplatedParent}}" />
                <Setter TargetName="PART_Mouse" Property="BorderThickness" Value="{Binding BorderThickness, RelativeSource={RelativeSource TemplatedParent}}" />
            </MultiTrigger>
        </ControlTemplate.Triggers>

    </ControlTemplate>


    <Style TargetType="{x:Type local:SgzRadioButton}" BasedOn="{StaticResource MaxControlStyle}">
        <Setter Property="Content" Value="SgzRadioButton" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Style.Triggers>
            
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="Type" Value="Standard" />
                    <Condition Property="LabelPlacement" Value="Left" />
                </MultiTrigger.Conditions>
                <Setter Property="Template" Value="{StaticResource LeftLabelTemplate}" />
            </MultiTrigger>
            
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="Type" Value="Standard" />
                    <Condition Property="LabelPlacement" Value="Right" />
                </MultiTrigger.Conditions>
                <Setter Property="Template" Value="{StaticResource RightLabelTemplate}" />
            </MultiTrigger>

            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="Type" Value="CheckButton" />
                    <Condition Property="IsTransparent" Value="False" />
                </MultiTrigger.Conditions>
                <Setter Property="Template" Value="{StaticResource CheckButtonTemplate}" />
            </MultiTrigger>

            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="Type" Value="CheckButton" />
                    <Condition Property="IsTransparent" Value="True" />
                </MultiTrigger.Conditions>
                <Setter Property="Template" Value="{StaticResource CheckButtonTemplate}" />
                <Setter Property="Background" Value="Transparent" />
            </MultiTrigger>


        </Style.Triggers>
    </Style>
    
    
</ResourceDictionary>