<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:SgzControls.Controls"
                    xmlns:c="clr-namespace:SgzControls.Converters">

    <!--Merged Dictionaries-->
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="/SugzControls;component/Resources/Colors.xaml" />
        <ResourceDictionary Source="/SugzControls;component/Resources/Icons.xaml" />
        <ResourceDictionary Source="/SugzControls;component/Resources/IconStyles.xaml" />
    </ResourceDictionary.MergedDictionaries>


    <!--SgzComboBoxItemStyle-->
    <Style x:Key="SgzComboBoxItemStyle" TargetType="{x:Type ComboBoxItem}">
        <Setter Property="Height" Value="18" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="VerticalContentAlignment" Value="Bottom"/>
        <Setter Property="Padding" Value="3,0,3,3" />
        <Setter Property="Background" Value="Transparent" />
        
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Padding="{TemplateBinding Padding}"
                            SnapsToDevicePixels="true">
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver"
                                           Value="true" />
                                <Condition Property="IsHighlighted"
                                           Value="true" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Background"
                                    Value="{StaticResource MaxBlueMouseOver}" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver"
                                           Value="false" />
                                <Condition Property="IsHighlighted"
                                           Value="true" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Background"
                                    Value="{StaticResource MaxBlue}" />
                        </MultiTrigger>
                        <Trigger Property="IsEnabled"
                                 Value="false">
                            <Setter Property="Foreground"
                                    Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    
    <!--SgzComboBoxToggleButton-->
    <Style x:Key="SgzComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="IsTabStop" Value="false" />
        <Setter Property="Focusable" Value="false" />
        <Setter Property="ClickMode" Value="Press" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    
                    <!--Template-->
                    <Border x:Name="PART_MOUSE"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="1">
                        <Path x:Name="PART_ARROW"
                              Data="{StaticResource RolloutExpandedGeo}"
                              Style="{StaticResource NoStretchIcon}"
                              Fill="{StaticResource MaxRolloutArrow}"
                              HorizontalAlignment="Right"
                              VerticalAlignment="Center"
                              Margin="6,0"
                              Width="6"
                              DockPanel.Dock="Right" />
                    </Border>

                    <!--Triggers-->
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver"
                                           Value="true" />
                                <Condition Property="IsChecked"
                                           Value="false" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="PART_MOUSE"
                                    Property="Background"
                                    Value="{StaticResource MaxButtonMouseOver}" />
                            <Setter TargetName="PART_ARROW"
                                    Property="Fill"
                                    Value="{StaticResource MaxTitle}" />
                        </MultiTrigger>
                        <!--<Trigger Property="IsEnabled"
                                 Value="false">
                            <Setter Property="Fill"
                                    TargetName="Arrow"
                                    Value="#AFAFAF" />
                        </Trigger>-->
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <!--SgzComboBoxStyle-->
    <Style x:Key="SgzComboBoxStyle" TargetType="{x:Type local:SgzComboBox}">
        <Setter Property="Background" Value="{StaticResource MaxButton}" />
        <Setter Property="BorderBrush" Value="{StaticResource MaxButtonBorder}" />
        <Setter Property="Foreground" Value="{StaticResource MaxText}" />
        <Setter Property="Height" Value="22" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="FontWeight" Value="Normal" />
        <Setter Property="FontFamily" Value="Tahoma" />
        <Setter Property="FontSize" Value="11" />
        <Setter Property="FontStretch" Value="Normal" />
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="UseLayoutRounding" Value="True" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="VerticalContentAlignment" Value="Bottom" />
        <Setter Property="Padding" Value="4,0,4,5" />
        <Setter Property="ScrollViewer.CanContentScroll" Value="true" />
        <Setter Property="ScrollViewer.PanningMode" Value="Both" />
        <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
        <Setter Property="ItemContainerStyle" Value="{StaticResource SgzComboBoxItemStyle}" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:SgzComboBox}">
                    
                    <!--Template-->
                    <Grid x:Name="MainGrid"
                          SnapsToDevicePixels="true">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}"
                                              Width="0" />
                        </Grid.ColumnDefinitions>
                        
                        <Popup x:Name="PART_Popup"
                               AllowsTransparency="true"
                               Grid.ColumnSpan="2"
                               IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}"
                               Margin="1"
                               PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}"
                               Placement="Bottom">
                            <Border x:Name="DropDownBorder"
                                    Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="1"
                                    MaxHeight="{TemplateBinding MaxDropDownHeight}"
                                    MinWidth="{Binding ActualWidth, ElementName=MainGrid}"
                                    Margin="0,0,8,8">
                                <Border.Effect>
                                    <DropShadowEffect Opacity="0.25" />
                                </Border.Effect>
                                    
                                <ScrollViewer x:Name="DropDownScrollViewer">
                                    <Grid RenderOptions.ClearTypeHint="Enabled">
                                        <Canvas HorizontalAlignment="Left"
                                                Height="0"
                                                VerticalAlignment="Top"
                                                Width="0">
                                            <Rectangle x:Name="OpaqueRect"
                                                       Fill="{Binding Background, ElementName=DropDownBorder}"
                                                       Height="{Binding ActualHeight, ElementName=DropDownBorder}"
                                                       Width="{Binding ActualWidth, ElementName=DropDownBorder}" />
                                        </Canvas>
                                        <ItemsPresenter x:Name="ItemsPresenter"
                                                        KeyboardNavigation.DirectionalNavigation="Contained"
                                                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                    </Grid>
                                </ScrollViewer>
                            </Border>
                        </Popup>
                        
                        <ToggleButton BorderBrush="{TemplateBinding BorderBrush}"
                                      Background="{TemplateBinding Background}"
                                      Grid.ColumnSpan="2"
                                      IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                      Style="{StaticResource SgzComboBoxToggleButton}" />
                        <ContentPresenter ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                          ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                          Content="{TemplateBinding SelectionBoxItem}"
                                          ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          IsHitTestVisible="false"
                                          Margin="{TemplateBinding Padding}"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                    </Grid>

                    <!--Triggers-->
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasItems"
                                 Value="false">
                            <Setter Property="Height"
                                    TargetName="DropDownBorder"
                                    Value="95" />
                        </Trigger>
                        <Trigger Property="IsEnabled"
                                 Value="false">
                            <Setter Property="Foreground"
                                    Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                            <Setter Property="Background"
                                    Value="#FFF4F4F4" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsGrouping"
                                           Value="true" />
                                <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping"
                                           Value="false" />
                            </MultiTrigger.Conditions>
                            <Setter Property="ScrollViewer.CanContentScroll"
                                    Value="false" />
                        </MultiTrigger>
                        <Trigger Property="ScrollViewer.CanContentScroll"
                                 SourceName="DropDownScrollViewer"
                                 Value="false">
                            <Setter Property="Canvas.Top"
                                    TargetName="OpaqueRect"
                                    Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}" />
                            <Setter Property="Canvas.Left"
                                    TargetName="OpaqueRect"
                                    Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}" />
                        </Trigger>
                    </ControlTemplate.Triggers>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>



    


</ResourceDictionary>