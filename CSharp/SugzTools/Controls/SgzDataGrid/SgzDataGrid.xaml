<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:SugzTools.Controls">

    <!--Merged Dictionaries-->
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="/SugzTools;component/Themes/MaxStyles.xaml" />
    </ResourceDictionary.MergedDictionaries>


    <Style x:Key="UnselectableCellStyle" TargetType="{x:Type DataGridCell}">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridCell}">
                    <Border BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}"
                            SnapsToDevicePixels="True">
                        <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
            </Trigger>
        </Style.Triggers>
    </Style>
    

    <Style x:Key="SgzColumnHeaderGripperStyle" TargetType="{x:Type Thumb}">
        <Setter Property="Width" Value="8" />
        <Setter Property="Cursor" Value="SizeWE" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Border Background="Transparent"
                            Padding="{TemplateBinding Padding}">
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    
    <Style x:Key="SgzDataGridColumnHeaderStyle" TargetType="{x:Type DataGridColumnHeader}">
        <Setter Property="Background" Value="{Binding HeaderBackground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:SgzDataGrid}}}" />
        <Setter Property="Foreground" Value="{Binding HeaderForeground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:SgzDataGrid}}}" />
        <Setter Property="BorderBrush" Value="{Binding BorderBrush, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:SgzDataGrid}}}" />
        <Setter Property="BorderThickness" Value="{Binding GridLinesVisibility, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:SgzDataGrid}}, Converter={StaticResource GridLineVisibilityToBorderThickness}}" />
        <Setter Property="HorizontalContentAlignment" Value="{Binding ColumnHeaderHorizontalAlignment, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:SgzDataGrid}}}" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridColumnHeader}">
                    <Grid>
                        <Border x:Name="Bd" 
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Background="{TemplateBinding Background}"
                                Padding="{TemplateBinding Padding}">
                            <DockPanel>
                                <local:SgzIcon x:Name="SortArrow" 
                                               Icon="MdiMenuDown"
                                               Width="8"
                                               Height="4"
                                               Stretch="Fill"
                                               Margin="0,2,0,0"
                                               DockPanel.Dock="Top"
                                               Opacity="0"
                                               Foreground="{StaticResource MaxButton}"
                                               RenderTransformOrigin="0.5,0.4"/>
                                <ContentPresenter RecognizesAccessKey="True"
                                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                                  Margin="2,0,2,4"/>
                            </DockPanel>
                        </Border>
                        <Thumb x:Name="PART_LeftHeaderGripper"
                               HorizontalAlignment="Left"
                               Style="{StaticResource SgzColumnHeaderGripperStyle}" />
                        <Thumb x:Name="PART_RightHeaderGripper"
                               HorizontalAlignment="Right"
                               Style="{StaticResource SgzColumnHeaderGripperStyle}" />

                    </Grid>

                    <ControlTemplate.Triggers>
                        <!--Mouse States-->
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Bd" Property="Background"
                                    Value="{Binding HeaderHoverBrush, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:SgzDataGrid}}}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="Bd" Property="Background"
                                    Value="{Binding HeaderPressedBrush, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:SgzDataGrid}}}" />
                        </Trigger>
                        
                        <!--Sort Arrow-->
                        <Trigger Property="SortDirection" Value="Ascending">
                            <Setter TargetName="SortArrow" Property="Opacity" Value="100" />
                            <Setter TargetName="SortArrow" Property="RenderTransform">
                                <Setter.Value>
                                    <RotateTransform Angle="180" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="SortDirection" Value="Descending">
                            <Setter TargetName="SortArrow" Property="Opacity" Value="100" />
                        </Trigger>
                    </ControlTemplate.Triggers>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    
    <Style x:Key="RowHeaderGripperStyle" TargetType="{x:Type Thumb}">
        <Setter Property="Height" Value="8" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Cursor" Value="SizeNS" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Border Background="{TemplateBinding Background}"
                            Padding="{TemplateBinding Padding}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    
    <Style x:Key="SgzDataGridRowHeaderStyle" TargetType="{x:Type DataGridRowHeader}">
        <Setter Property="Background" Value="{Binding HeaderBackground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:SgzDataGrid}}}" />
        <Setter Property="Foreground" Value="{Binding HeaderForeground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:SgzDataGrid}}}" />
        <Setter Property="BorderBrush" Value="{Binding BorderBrush, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:SgzDataGrid}}}" />
        <Setter Property="BorderThickness" Value="{Binding GridLinesVisibility, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:SgzDataGrid}}, Converter={StaticResource GridLineVisibilityToBorderThickness}}" />
        <Setter Property="HorizontalContentAlignment" Value="{Binding RowHeaderHorizontalAlignment, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:SgzDataGrid}}}" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridRowHeader}">
                    <Grid>
                        <Border x:Name="Bd"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Background="{TemplateBinding Background}"
                                Padding="{TemplateBinding Padding}">
                            <StackPanel Orientation="Horizontal"
                                        HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}">
                                <ContentPresenter RecognizesAccessKey="True" 
                                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}" 
                                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                <Control SnapsToDevicePixels="false" 
                                         Template="{Binding ValidationErrorTemplate, RelativeSource={RelativeSource AncestorType={x:Type DataGridRow}}}" 
                                         Visibility="{Binding (Validation.HasError), Converter={StaticResource BoolToVisibility}, RelativeSource={RelativeSource AncestorType={x:Type DataGridRow}}}" />
                            </StackPanel>
                        </Border>
                            
                        <Thumb x:Name="PART_TopHeaderGripper" 
                               Style="{StaticResource RowHeaderGripperStyle}" 
                               VerticalAlignment="Top" />
                        <Thumb x:Name="PART_BottomHeaderGripper" 
                               Style="{StaticResource RowHeaderGripperStyle}" 
                               VerticalAlignment="Bottom" />
                    </Grid>
                    
                    <ControlTemplate.Triggers>
                        <!--Mouse States-->
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Bd" Property="Background"
                                    Value="{Binding HeaderHoverBrush, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:SgzDataGrid}}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                    
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    
    <Style x:Key="SgzDataGridCellStyle" TargetType="{x:Type DataGridCell}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridCell}">
                    <Border BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}"
                            SnapsToDevicePixels="True">
                        <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Background" Value="{Binding SelectionBrush, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:SgzDataGrid}}}" />
                <Setter Property="BorderBrush" Value="{Binding SelectionBrush, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:SgzDataGrid}}}" />
                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" />
            </Trigger>
            <Trigger Property="IsKeyboardFocusWithin" Value="True">
                <Setter Property="BorderBrush" Value="{Binding SelectedCellBorderBrush, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:SgzDataGrid}}}" />
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsSelected" Value="true" />
                    <Condition Property="Selector.IsSelectionActive" Value="false" />
                </MultiTrigger.Conditions>
                <Setter Property="Background" Value="{Binding SelectionInactiveBrush, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:SgzDataGrid}}}" />
                <Setter Property="BorderBrush" Value="{Binding SelectionInactiveBrush, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:SgzDataGrid}}}" />
                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightTextBrushKey}}" />
            </MultiTrigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    
    <Style x:Key="SgzDataGridSelectAllButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="Width" Value="{Binding CellsPanelHorizontalOffset, RelativeSource={RelativeSource AncestorType={x:Type local:SgzDataGrid}}}" />
        <Setter Property="Visibility" Value="{Binding HeadersVisibility, ConverterParameter={x:Static DataGridHeadersVisibility.All}, Converter={x:Static DataGrid.HeadersVisibilityConverter}, RelativeSource={RelativeSource AncestorType={x:Type local:SgzDataGrid}}}" />
        <Setter Property="Height" Value="Auto" />
        <Setter Property="IsEnabled" Value="{Binding IsSelectable, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:SgzDataGrid}}}" />
        
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="Bd" 
                            Background="{Binding HeaderBackground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:SgzDataGrid}}}"
                            BorderBrush="{Binding BorderBrush, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:SgzDataGrid}}}"
                            BorderThickness="{Binding GridLinesVisibility, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:SgzDataGrid}}, Converter={StaticResource GridLineVisibilityToBorderThickness}}">
                        <Path Fill="{StaticResource MaxButton}"
                              Data="M0,7 L7,0 7,7 Z" 
                              HorizontalAlignment="Right"
                              VerticalAlignment="Bottom"
                              Margin="4"
                              Visibility="{Binding IsSelectable, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:SgzDataGrid}}, Converter={StaticResource BoolToVisibility}}" />
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Bd" Property="Background"
                                    Value="{Binding HeaderHoverBrush, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:SgzDataGrid}}}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="Bd" Property="Background"
                                    Value="{Binding HeaderPressedBrush, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:SgzDataGrid}}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                    
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style TargetType="{x:Type local:SgzDataGrid}" BasedOn="{StaticResource MaxStyle}">
        <Setter Property="Background" Value="{StaticResource MaxRollout}" />
        <Setter Property="BorderBrush" Value="{StaticResource MaxRolloutBorder}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Foreground" Value="{StaticResource MaxText}" />
        <Setter Property="RowBackground" Value="Transparent" />
        <Setter Property="RowDetailsVisibilityMode" Value="VisibleWhenSelected" />
        <Setter Property="GridLinesVisibility" Value="None" />
        <Setter Property="VerticalGridLinesBrush" Value="{StaticResource MaxRolloutBorder}" />
        <Setter Property="HorizontalGridLinesBrush" Value="{StaticResource MaxRolloutBorder}" />
        <Setter Property="AutoGenerateColumns" Value="False" />
        <Setter Property="HeadersVisibility" Value="Column" />
        <Setter Property="CanUserAddRows" Value="False" />
        <Setter Property="ColumnHeaderStyle" Value="{StaticResource SgzDataGridColumnHeaderStyle}" />
        <Setter Property="RowHeaderStyle" Value="{StaticResource SgzDataGridRowHeaderStyle}" />
        <Setter Property="CellStyle" Value="{StaticResource SgzDataGridCellStyle}" />
        
        <Setter Property="RowHeaderTemplate">
            <Setter.Value>
                <DataTemplate>
                    <TextBlock Text="{Binding DataContext.RowHeader, RelativeSource={RelativeSource AncestorType=DataGridRow}}" 
                               Margin="5,0"/>
                </DataTemplate>
            </Setter.Value>
        </Setter>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGrid}">
                    <Border BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}"
                            Padding="{TemplateBinding Padding}"
                            SnapsToDevicePixels="True">
                        <ScrollViewer x:Name="DG_ScrollViewer"
                                      Focusable="false">
                            <ScrollViewer.Template>
                                <ControlTemplate TargetType="{x:Type ScrollViewer}">
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="*" />
                                            <ColumnDefinition Width="Auto" />
                                        </Grid.ColumnDefinitions>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition Height="*" />
                                            <RowDefinition Height="Auto" />
                                        </Grid.RowDefinitions>
                                        <Button Command="{x:Static DataGrid.SelectAllCommand}"
                                                Style="{StaticResource SgzDataGridSelectAllButtonStyle}" />
                                        <DataGridColumnHeadersPresenter x:Name="PART_ColumnHeadersPresenter"
                                                                        Grid.Column="1"
                                                                        Visibility="{Binding HeadersVisibility, ConverterParameter={x:Static DataGridHeadersVisibility.Column}, Converter={x:Static DataGrid.HeadersVisibilityConverter}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" />
                                        <ScrollContentPresenter x:Name="PART_ScrollContentPresenter"
                                                                CanContentScroll="{TemplateBinding CanContentScroll}"
                                                                Grid.ColumnSpan="2"
                                                                Grid.Row="1" />
                                        <ScrollBar x:Name="PART_VerticalScrollBar"
                                                   Grid.Column="2"
                                                   Maximum="{TemplateBinding ScrollableHeight}"
                                                   Orientation="Vertical"
                                                   Grid.Row="1"
                                                   Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"
                                                   Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"
                                                   ViewportSize="{TemplateBinding ViewportHeight}" />
                                        <Grid Grid.Column="1"
                                              Grid.Row="2">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="{Binding NonFrozenColumnsViewportHorizontalOffset, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" />
                                                <ColumnDefinition Width="*" />
                                            </Grid.ColumnDefinitions>
                                            <ScrollBar x:Name="PART_HorizontalScrollBar"
                                                       Grid.Column="1"
                                                       Maximum="{TemplateBinding ScrollableWidth}"
                                                       Orientation="Horizontal"
                                                       Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"
                                                       Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"
                                                       ViewportSize="{TemplateBinding ViewportWidth}" />
                                        </Grid>
                                    </Grid>
                                </ControlTemplate>
                            </ScrollViewer.Template>
                            <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </ScrollViewer>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>


        <Style.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsGrouping" Value="true" />
                    <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false" />
                </MultiTrigger.Conditions>
                <Setter Property="ScrollViewer.CanContentScroll" Value="false" />
            </MultiTrigger>

            <Trigger Property="IsSelectable" Value="False">
                <Setter Property="CellStyle" Value="{StaticResource UnselectableCellStyle}" />
            </Trigger>

        </Style.Triggers>
    </Style>


</ResourceDictionary>