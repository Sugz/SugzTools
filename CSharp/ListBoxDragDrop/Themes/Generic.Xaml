<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:ListBoxDragDrop"
                    xmlns:sgz="clr-namespace:SugzTools.Controls;assembly=SugzTools">


    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="/SugzTools;component/Themes/MaxStyles.xaml" />
        <ResourceDictionary Source="/SugzTools;component/Controls/SgzExpander/SgzExpander.xaml" />
    </ResourceDictionary.MergedDictionaries>


    <Style x:Key="ExpanderThumbStyle" TargetType="{x:Type Thumb}">
        <Setter Property="Width" Value="20" />
        <Setter Property="Foreground" Value="{StaticResource MaxRolloutArrow}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Border Background="Transparent">
                        <Path Data="{StaticResource RolloutDragDropGeo}"
                              Stretch="None"
                              Fill="{TemplateBinding Foreground}"
                              HorizontalAlignment="Center"
                              VerticalAlignment="Center" />
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Foreground" Value="{StaticResource MaxTitle}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                    
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style TargetType="{x:Type local:SgzExpanderItem}" BasedOn="{StaticResource MaxStyle}">
        <Setter Property="Background" Value="{StaticResource MaxRollout}" />
        <Setter Property="Foreground" Value="{StaticResource MaxTitle}" />
        <Setter Property="BorderBrush" Value="{StaticResource MaxRolloutBorder}" />
        <Setter Property="Header" Value="SgzExpander" />
        <Setter Property="Margin" Value="0,0,0,5" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:SgzExpanderItem}">

                    <Grid>
                        <StackPanel Background="Transparent">

                            <!--Top Indicator-->
                            <!--<Rectangle x:Name="PART_TopIndicator"
                                       Fill="{StaticResource MaxBlue}"
                                       RadiusX="2"
                                       RadiusY="2"
                                       Height="2"
                                       Margin="5,0,5,5"/>-->

                            <!--Expander-->
                            <Border Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    CornerRadius="{Binding CornerRadius, RelativeSource={RelativeSource TemplatedParent}}">

                                <StackPanel>
                                    <!-- Expander Header -->
                                    <Border Background="{TemplateBinding HeaderBrush}"
                                            Height="{Binding HeaderHeight, RelativeSource={RelativeSource TemplatedParent}}"
                                            CornerRadius="{Binding CornerRadius, RelativeSource={RelativeSource TemplatedParent}}">

                                        <DockPanel>
                                            <Thumb x:Name="PART_Drag"
                                                   DockPanel.Dock="Right"
                                                   Style="{StaticResource ExpanderThumbStyle}" />
                                            <ToggleButton x:Name="PART_Header"
                                                          Content="{TemplateBinding Header}"
                                                          Foreground="{TemplateBinding Foreground}"
                                                          FontWeight="SemiBold"
                                                          IsChecked="{Binding IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                                          Style="{StaticResource SgzExpanderHeaderStyle}" />

                                        </DockPanel>
                                    </Border>

                                    <!-- Content -->
                                    <ContentPresenter x:Name="PART_Expand" />
                                </StackPanel>
                            </Border>
                            
                            <!--Bottom Indicator-->
                            <!--<Rectangle x:Name="PART_BottomIndicator" 
                                       Fill="{StaticResource MaxBlue}"
                                       RadiusX="2"
                                       RadiusY="2"
                                       Height="2"
                                       Margin="5,5,5,0"/>-->
                            
                        </StackPanel>

                        <!-- PopUp -->
                        <Popup x:Name="PART_Popup"
                               Placement="{TemplateBinding PopUpPlacementMode}"
                               StaysOpen="True"
                               Width="{Binding PopupWidth, RelativeSource={RelativeSource TemplatedParent}}"
                               AllowsTransparency="True">

                            <Border Background="{StaticResource MaxRollout}"
                                    BorderBrush="{StaticResource MaxRolloutBorder}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    CornerRadius="{Binding CornerRadius, RelativeSource={RelativeSource TemplatedParent}}">
                                <ContentControl x:Name="PART_PopupContent"
                                                Focusable="False" />
                            </Border>
                        </Popup>

                    </Grid>


                    <ControlTemplate.Triggers>

                        <!-- Trigger for showing the popup when Expander control is not expanded and IsMouseOver is true  -->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True" />
                                <Condition Property="IsExpanded" Value="False" />
                                <Condition Property="HasPopup" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="PART_Expand" Property="Content"
                                    Value="{x:Null}" />
                            <Setter TargetName="PART_PopupContent" Property="Content"
                                    Value="{Binding OldContent, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay, Converter={StaticResource ObjectToUIElement}}" />
                            <Setter TargetName="PART_Popup" Property="IsOpen"
                                    Value="True" />
                        </MultiTrigger>


                        <!-- Trigger for setting the content of expander when IsExpanded is true -->
                        <Trigger Property="IsExpanded" Value="True">
                            <Setter TargetName="PART_PopupContent" Property="Content"
                                    Value="{x:Null}" />
                            <Setter TargetName="PART_Expand" Property="Content"
                                    Value="{Binding OldContent, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" />
                        </Trigger>

                        <Trigger Property="TopIndicator" Value="True">
                            <!--<Setter TargetName="PART_TopIndicator" Property="Visibility" Value="Collapsed"/>-->
                            <Setter Property="Margin" Value="0,15,0,5" />
                        </Trigger>

                        <Trigger Property="BottomIndicator" Value="True">
                            <!--<Setter TargetName="PART_BottomIndicator" Property="Visibility" Value="Collapsed"/>-->
                            <Setter Property="Margin" Value="0,5,0,15" />
                        </Trigger>
                        

                    </ControlTemplate.Triggers>

                </ControlTemplate>
            </Setter.Value>
        </Setter>

    </Style>

</ResourceDictionary>