<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:SugzTools.Controls"
                    xmlns:c="clr-namespace:SugzTools.Converters">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="/SugzTools;component/Themes/MaxStyles.xaml" />
    </ResourceDictionary.MergedDictionaries>
    


    <!-- SgzExpanderHeaderStyle -->
    <Style x:Key="SgzExpanderHeaderStyle" TargetType="{x:Type ToggleButton}" BasedOn="{StaticResource MaxStyle}">
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <StackPanel Background="Transparent"
                                Orientation="Horizontal">

                        <Path x:Name="PART_ARROW"
                              Data="{StaticResource RolloutCollapsedGeo}"
                              Style="{StaticResource NoStretchIcon}"
                              Fill="{StaticResource MaxRolloutArrow}"
                              HorizontalAlignment="Left"
                              VerticalAlignment="Center"
                              Margin="6,0,0,0" 
                              Width="6"/>
 
                        <TextBlock Text="{TemplateBinding Content}"
                                   Foreground="{TemplateBinding Foreground}"
                                   HorizontalAlignment="Left"
                                   VerticalAlignment="Center"
                                   Margin="10,0,0,0"
                                   FontWeight="SemiBold"
                                   TextOptions.TextFormattingMode="Display" />
                    </StackPanel>

                    <ControlTemplate.Triggers>
                        <!-- Expand State -->
                        <Trigger Property="IsChecked"
                                 Value="true">
                            <Setter TargetName="PART_ARROW"
                                    Property="Data"
                                    Value="{StaticResource RolloutExpandedGeo}" />
                        </Trigger>

                        <!-- Mouse Triggers -->
                        <Trigger Property="IsMouseOver"
                                 Value="True">
                            <Setter TargetName="PART_ARROW"
                                    Property="Fill"
                                    Value="{StaticResource MaxTitle}" />
                        </Trigger>
                    </ControlTemplate.Triggers>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    
    <!--SgzExpanderDragDropIcon-->
    <Style x:Key="SgzExpanderDragDropIcon" TargetType="{x:Type Button}" BasedOn="{StaticResource OverridesDefaultStyle}">
        <Setter Property="Focusable" Value="False"/>
        
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <!--Template-->
                    <Border Background="Transparent">
                        <Path x:Name="PART_ICON"
                              Data="{StaticResource RolloutDragDropGeo}"
                              Style="{StaticResource NoStretchIcon}"
                              Fill="{StaticResource MaxRolloutArrow}"
                              HorizontalAlignment="Center"
                              VerticalAlignment="Center" />
                    </Border>

                    <ControlTemplate.Triggers>
                        <!-- Mouse Triggers -->
                        <Trigger Property="IsMouseOver"
                                 Value="True">
                            <Setter TargetName="PART_ICON"
                                    Property="Fill"
                                    Value="{StaticResource MaxTitle}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                    
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    
    <!--SgzExpanderStyle-->
    <Style TargetType="{x:Type local:SgzExpander}" BasedOn="{StaticResource MaxStyle}">
        <Setter Property="IsExpanded" Value="False"/>
        <Setter Property="Background" Value="{StaticResource MaxRollout}" />
        <Setter Property="Foreground" Value="{StaticResource MaxTitle}" />
        <Setter Property="BorderBrush" Value="{StaticResource MaxRolloutBorder}" />
        <Setter Property="Header" Value="SgzExpander" />
        
        <!--Template-->
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:SgzExpander}">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="{Binding CornerRadius, RelativeSource={RelativeSource TemplatedParent}}">
                        
                        <Grid>
                            <!-- Expander -->
                            <StackPanel>
                                
                                <!-- Expander Header -->
                                <Border Background="{TemplateBinding HeaderBrush}"
                                        Height="{Binding HeaderHeight, RelativeSource={RelativeSource TemplatedParent}}"
                                        CornerRadius="{Binding CornerRadius, RelativeSource={RelativeSource TemplatedParent}}">
                                    <DockPanel>
                                        <Button x:Name="PART_DRAGDROP"
                                                Width="20"
                                                DockPanel.Dock="Right"
                                                Style="{StaticResource SgzExpanderDragDropIcon}" />
                                        <ToggleButton Content="{TemplateBinding Header}"
                                                      Foreground="{TemplateBinding Foreground}"
                                                      IsChecked="{Binding IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                                      Style="{StaticResource SgzExpanderHeaderStyle}" />
                                    </DockPanel>
                                </Border>

                                <!-- Content -->
                                <ContentPresenter x:Name="PART_EXPAND" />
                            </StackPanel>

                            <!-- PopUp -->
                            <Popup x:Name="PART_POPUP"
                                   Placement="{TemplateBinding PopUpPlacementMode}"
                                   StaysOpen="True"
                                   Width="{Binding PopupWidth, RelativeSource={RelativeSource TemplatedParent}}"
                                   AllowsTransparency="True">

                                <Border Background="{StaticResource MaxRollout}"
                                        BorderBrush="{StaticResource MaxRolloutBorder}"
                                        BorderThickness="{TemplateBinding BorderThickness}"
                                        CornerRadius="{Binding CornerRadius, RelativeSource={RelativeSource TemplatedParent}}">
                                    <ContentControl x:Name="PART_POPUP_CONTENT"
                                                    Focusable="False"/>
                                </Border>

                            </Popup>

                        </Grid>
                    </Border>

                    <ControlTemplate.Triggers>
                        <!-- Trigger for showing the popup when Expander control is not expanded and IsMouseOver is true  -->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True" />
                                <Condition Property="IsExpanded" Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="PART_EXPAND" Property="Content" Value="{x:Null}" />
                            <Setter TargetName="PART_POPUP_CONTENT" Property="Content"
                                    Value="{Binding OldContent, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay, Converter={StaticResource ObjectToUIElement}}" />
                            <Setter TargetName="PART_POPUP" Property="IsOpen" Value="True" />
                        </MultiTrigger>


                        <!-- Trigger for setting the content of expander when IsExpanded is true -->
                        <Trigger Property="IsExpanded" Value="True">
                            <Setter TargetName="PART_POPUP_CONTENT" Property="Content" Value="{x:Null}" />
                            <Setter TargetName="PART_EXPAND" Property="Content"
                                    Value="{Binding OldContent, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>