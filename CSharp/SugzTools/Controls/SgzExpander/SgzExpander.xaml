<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:SugzTools.Controls"
                    xmlns:c="clr-namespace:SugzTools.Converters">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="/SugzTools;component/Themes/MaxStyles.xaml" />
    </ResourceDictionary.MergedDictionaries>


    <!-- SgzExpanderHeaderStyle -->
    <Style x:Key="SgzExpanderHeaderStyle" TargetType="{x:Type ToggleButton}" BasedOn="{StaticResource MaxStyle}">
        <Setter Property="Focusable" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <DockPanel Background="Transparent">

                        <Path x:Name="PART_Arrow"
                              DockPanel.Dock="Left"
                              Data="{StaticResource RolloutCollapsedGeo}"
                              Style="{StaticResource NoStretchIcon}"
                              Fill="{StaticResource MaxRolloutArrow}"
                              VerticalAlignment="Center"
                              Margin="6,0,0,0"
                              Width="6" />

                        <ContentPresenter x:Name="PART_Content"
                                          DockPanel.Dock="Left"
                                          HorizontalAlignment="Stretch"
                                          VerticalAlignment="Center"
                                          Margin="10,0,0,0"
                                          TextOptions.TextFormattingMode="Display" />
                    </DockPanel>

                    <ControlTemplate.Triggers>
                        <!-- Expand State -->
                        <Trigger Property="IsChecked" Value="true">
                            <Setter TargetName="PART_Arrow" Property="Data" Value="{StaticResource RolloutExpandedGeo}" />
                        </Trigger>

                        <!-- Mouse Triggers -->
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="PART_Arrow" Property="Fill" Value="{StaticResource MaxTitle}" />
                        </Trigger>

                        <Trigger Property="HorizontalAlignment" Value="Right">
                            <Setter TargetName="PART_Arrow" Property="DockPanel.Dock" Value="Right" />
                            <Setter TargetName="PART_Arrow" Property="Margin" Value="0,0,6,0" />
                            <Setter TargetName="PART_Content" Property="HorizontalAlignment" Value="left" />
                        </Trigger>

                    </ControlTemplate.Triggers>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <!-- SgzGroupBoxExpanderHeaderStyle -->
    <Style x:Key="SgzGroupBoxExpanderHeaderStyle" TargetType="{x:Type ToggleButton}" BasedOn="{StaticResource MaxStyle}">
        <Setter Property="Focusable" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <DockPanel Background="Transparent">

                        <Path x:Name="PART_Arrow"
                              DockPanel.Dock="Right"
                              Data="{StaticResource RolloutCollapsedInvertedGeo}"
                              Style="{StaticResource NoStretchIcon}"
                              Fill="{StaticResource MaxRolloutArrow}"
                              VerticalAlignment="Center"
                              Margin="0,0,6,0"
                              Width="6"
                              RenderTransformOrigin="0.5,0.5">
                        </Path>

                        <ContentPresenter HorizontalAlignment="Left"
                                          VerticalAlignment="Center"
                                          Margin="6,0,0,0"
                                          TextOptions.TextFormattingMode="Display" />
                    </DockPanel>

                    <ControlTemplate.Triggers>
                        <!-- Expand State -->
                        <Trigger Property="IsChecked" Value="true">
                            <Setter TargetName="PART_Arrow" Property="Data" Value="{StaticResource RolloutExpandedGeo}" />
                        </Trigger>

                        <!-- Mouse Triggers -->
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="PART_Arrow" Property="Fill" Value="{StaticResource MaxTitle}" />
                        </Trigger>
                    </ControlTemplate.Triggers>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    
    <!--SgzExpanderDragDropIcon-->
    <Style x:Key="SgzExpanderDragDropIcon" TargetType="{x:Type Button}" BasedOn="{StaticResource OverridesDefaultStyle}">
        <Setter Property="Focusable" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <!--Template-->
                    <Border Background="Transparent">
                        <Path x:Name="PART_Icon"
                              Data="{StaticResource RolloutDragDropGeo}"
                              Style="{StaticResource NoStretchIcon}"
                              Fill="{StaticResource MaxRolloutArrow}"
                              HorizontalAlignment="Center"
                              VerticalAlignment="Center" />
                    </Border>

                    <ControlTemplate.Triggers>
                        <!-- Mouse Triggers -->
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="PART_Icon" Property="Fill" Value="{StaticResource MaxTitle}" />
                        </Trigger>
                    </ControlTemplate.Triggers>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    

    <!--SgzPopUpExpanderTemplate-->
    <ControlTemplate x:Key="SgzPopUpExpanderTemplate" TargetType="{x:Type local:SgzExpander}">
        <Border Background="{TemplateBinding Background}"
                BorderBrush="{TemplateBinding BorderBrush}"
                BorderThickness="{TemplateBinding BorderThickness}"
                CornerRadius="{Binding CornerRadius, RelativeSource={RelativeSource TemplatedParent}}">

            <Grid>
                <!-- Expander -->
                <StackPanel>

                    <!-- Expander Header -->
                    <Border Background="{TemplateBinding HeaderBrush}"
                            Height="{Binding HeaderHeight, RelativeSource={RelativeSource TemplatedParent}}"
                            CornerRadius="{Binding CornerRadius, RelativeSource={RelativeSource TemplatedParent}}">
                        <DockPanel>
                            <Button x:Name="PART_DragDrop"
                                    Width="20"
                                    DockPanel.Dock="Right"
                                    Style="{StaticResource SgzExpanderDragDropIcon}" />
                            <ToggleButton Content="{TemplateBinding Header}"
                                          Foreground="{TemplateBinding Foreground}"
                                          FontWeight="SemiBold"
                                          IsChecked="{Binding IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                          Style="{StaticResource SgzExpanderHeaderStyle}" />
                        </DockPanel>
                    </Border>

                    <!-- Content -->
                    <ContentPresenter x:Name="PART_Expand" />
                </StackPanel>

                <!-- PopUp -->
                <Popup x:Name="PART_Popup"
                       Placement="{TemplateBinding PopUpPlacementMode}"
                       StaysOpen="True"
                       Width="{Binding PopupWidth, RelativeSource={RelativeSource TemplatedParent}}"
                       AllowsTransparency="True">

                    <Border Background="{StaticResource MaxRollout}"
                            BorderBrush="{StaticResource MaxRolloutBorder}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="{Binding CornerRadius, RelativeSource={RelativeSource TemplatedParent}}">
                        <ContentControl x:Name="PART_PopupContent"
                                        Focusable="False" />
                    </Border>

                </Popup>

            </Grid>
        </Border>

        <ControlTemplate.Triggers>
            <!-- Trigger for showing the popup when Expander control is not expanded and IsMouseOver is true  -->
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver" Value="True" />
                    <Condition Property="IsExpanded" Value="False" />
                    <Condition Property="HasPopup" Value="True" />
                </MultiTrigger.Conditions>
                <Setter TargetName="PART_Expand" Property="Content" 
                        Value="{x:Null}" />
                <Setter TargetName="PART_PopupContent" Property="Content"
                        Value="{Binding OldContent, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay, Converter={StaticResource ObjectToUIElement}}" />
                <Setter TargetName="PART_Popup" Property="IsOpen"
                        Value="True" />
            </MultiTrigger>


            <!-- Trigger for setting the content of expander when IsExpanded is true -->
            <Trigger Property="IsExpanded" Value="True">
                <Setter TargetName="PART_PopupContent" Property="Content"
                        Value="{x:Null}" />
                <Setter TargetName="PART_Expand" Property="Content"
                        Value="{Binding OldContent, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    

    <!--SgzGroupBoxExpanderTemplate-->
    <ControlTemplate x:Key="SgzGroupBoxExpanderTemplate" TargetType="{x:Type local:SgzExpander}">
        <Border Background="{TemplateBinding Background}"
                BorderBrush="{TemplateBinding BorderBrush}"
                BorderThickness="{TemplateBinding BorderThickness}"
                CornerRadius="{Binding CornerRadius, RelativeSource={RelativeSource TemplatedParent}}">
            <StackPanel>

                <!-- Expander Header -->
                <Border Background="{TemplateBinding HeaderBrush}"
                        Height="{Binding HeaderHeight, RelativeSource={RelativeSource TemplatedParent}}"
                        CornerRadius="{Binding CornerRadius, RelativeSource={RelativeSource TemplatedParent}}">
                    <ToggleButton Content="{TemplateBinding Header}"
                                  Foreground="{TemplateBinding Foreground}"
                                  IsChecked="{Binding IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                  Style="{StaticResource SgzGroupBoxExpanderHeaderStyle}" />
                </Border>

                <!-- Content -->
                <ContentPresenter x:Name="PART_Expand"
                                  Visibility="Collapsed" />
            </StackPanel>
        </Border>

        <ControlTemplate.Triggers>
            <Trigger Property="IsExpanded" Value="true">
                <Setter TargetName="PART_Expand" Property="Visibility" Value="Visible" />
            </Trigger>
        </ControlTemplate.Triggers>

    </ControlTemplate>


    <!--SgzExpanderStyle-->
    <Style TargetType="{x:Type local:SgzExpander}" BasedOn="{StaticResource MaxStyle}">
        <Setter Property="Background" Value="{StaticResource MaxRollout}" />
        <Setter Property="Foreground" Value="{StaticResource MaxTitle}" />
        <Setter Property="BorderBrush" Value="{StaticResource MaxRolloutBorder}" />
        <Setter Property="Header" Value="SgzExpander" />

        <Style.Triggers>
            <Trigger Property="IsGroupBox" Value="true">
                <Setter Property="Template" Value="{StaticResource SgzGroupBoxExpanderTemplate}" />
            </Trigger>
            <Trigger Property="IsGroupBox" Value="false">
                <Setter Property="Template" Value="{StaticResource SgzPopUpExpanderTemplate}" />
            </Trigger>
        </Style.Triggers>

    </Style>

</ResourceDictionary>