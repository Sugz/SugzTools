<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:SugzTools.Controls"
                    xmlns:c="clr-namespace:SugzTools.Converters"
                    xmlns:s="clr-namespace:SugzTools.Src">

    <!--Merged Dictionaries-->
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="/SugzTools;component/Themes/MaxStyles.xaml" />
    </ResourceDictionary.MergedDictionaries>


    <!--SgzRadioButtonStyle-->
    <Style x:Key="SgzRadioButtonStyle" TargetType="{x:Type local:SgzRadioButton}" BasedOn="{StaticResource MaxControlStyle}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RadioButton}">

                    <!--Template-->
                    <Grid Background="Transparent"
                          Width="{TemplateBinding Width}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>

                        <TextBlock Text="{TemplateBinding Content}"
                                   Visibility="{Binding LabelPlacement, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource LabelPlacementToVisibility}, ConverterParameter={x:Static s:LabelPlacement.Left}}"
                                   Grid.Column="0"
                                   VerticalAlignment="Center"
                                   Width="{TemplateBinding Width, ConverterParameter=16, Converter={StaticResource LabelWidth}}"
                                   Margin="0,0,3,0" />
                        <Border x:Name="PART_BULLET"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="1"
                                CornerRadius="6"
                                Grid.Column="1"
                                Width="13"
                                Height="13">
                            <Ellipse Margin="2"
                                     Fill="{TemplateBinding Foreground}"
                                     Visibility="{TemplateBinding IsChecked, Converter={StaticResource BoolToVisibility}}" />
                        </Border>
                        <TextBlock Text="{TemplateBinding Content}"
                                   Visibility="{Binding LabelPlacement, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource LabelPlacementToVisibility}, ConverterParameter={x:Static s:LabelPlacement.Right}}"
                                   Grid.Column="2"
                                   VerticalAlignment="Center"
                                   Width="{TemplateBinding Width, ConverterParameter=16, Converter={StaticResource LabelWidth}}"
                                   TextAlignment="Right"
                                   Margin="3,0,0,0" />

                    </Grid>

                    <!--Triggers-->
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                        </Trigger>
                        
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="PART_BULLET" Property="Background" Value="{StaticResource MaxButtonMouseOver}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                    
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    
    <!--SgzRadioCheckButtonStyle-->
    <Style x:Key="SgzRadioCheckButtonStyle" TargetType="{x:Type local:SgzRadioButton}" BasedOn="{StaticResource MaxControlStyle}">
        <Setter Property="Height" Value="18" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:SgzRadioButton}">
                    
                    <Border x:Name="PART_Mouse"
                            Background="{TemplateBinding Background}"
                            BorderThickness="{Binding BaseBorderThickness, RelativeSource={RelativeSource TemplatedParent}}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            CornerRadius="{Binding CornerRadius, RelativeSource={RelativeSource TemplatedParent}}">
                        <ContentPresenter VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" />
                    </Border>

                    <ControlTemplate.Triggers>

                        <!--IsMouseOver & IsChecked-->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver"
                                           Value="True" />
                                <Condition Property="IsChecked"
                                           Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="PART_Mouse"
                                    Property="Background"
                                    Value="{Binding MouseDownBrush, RelativeSource={RelativeSource TemplatedParent}}" />
                            <Setter TargetName="PART_Mouse"
                                    Property="BorderThickness"
                                    Value="{Binding BorderThickness, RelativeSource={RelativeSource TemplatedParent}}" />
                        </MultiTrigger>

                        <!--not IsMouseOver & IsChecked-->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver"
                                           Value="False" />
                                <Condition Property="IsChecked"
                                           Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="PART_Mouse"
                                    Property="Background"
                                    Value="{Binding CheckedBrush, RelativeSource={RelativeSource TemplatedParent}}" />
                            <Setter TargetName="PART_Mouse"
                                    Property="BorderThickness"
                                    Value="{Binding BorderThickness, RelativeSource={RelativeSource TemplatedParent}}" />
                        </MultiTrigger>

                        <!--IsMouseOver & not IsChecked-->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver"
                                           Value="True" />
                                <Condition Property="IsChecked"
                                           Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="PART_Mouse"
                                    Property="Background"
                                    Value="{Binding MouseOverBrush, RelativeSource={RelativeSource TemplatedParent}}" />
                            <Setter TargetName="PART_Mouse"
                                    Property="BorderThickness"
                                    Value="{Binding BorderThickness, RelativeSource={RelativeSource TemplatedParent}}" />
                        </MultiTrigger>

                        <!--IsPressed & not IsChecked-->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsPressed"
                                           Value="True" />
                                <Condition Property="IsChecked"
                                           Value="false" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="PART_Mouse"
                                    Property="Background"
                                    Value="{Binding MouseDownBrush, RelativeSource={RelativeSource TemplatedParent}}" />
                            <Setter TargetName="PART_Mouse"
                                    Property="BorderThickness"
                                    Value="{Binding BorderThickness, RelativeSource={RelativeSource TemplatedParent}}" />
                        </MultiTrigger>
                    </ControlTemplate.Triggers>

                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsTransparent"
                     Value="True">
                <Setter Property="Background"
                        Value="Transparent" />
            </Trigger>
        </Style.Triggers>

    </Style>
    
    
    
    
    
    
    
    
    


    

</ResourceDictionary>